services:
  # PostgreSQL database service
  postgres:
    image: postgres:15-alpine
    container_name: commercify-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: commercify
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Commercify API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: commercify-api
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: commercify
      DB_SSL_MODE: disable
      SERVER_PORT: 6091
      AUTH_JWT_SECRET: your_jwt_secret
      EMAIL_ENABLED: "false"
      STRIPE_ENABLED: "false"
      PAYPAL_ENABLED: "false"
      MOBILEPAY_ENABLED: "false"
    ports:
      - "6091:6091"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  # Convenience services for database operations
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    profiles: ["tools"]
    entrypoint: ["/app/commercify-migrate"]
    command: ["-up"]
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: commercify
      DB_SSL_MODE: disable
    depends_on:
      postgres:
        condition: service_healthy

  seed:
    build:
      context: .
      dockerfile: Dockerfile
    profiles: ["tools"]
    entrypoint: ["/app/commercify-seed"]
    command: ["-all"]
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: commercify
      DB_SSL_MODE: disable
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
